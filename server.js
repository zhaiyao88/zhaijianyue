const express=require('express');const path=require('path');const fs=require('fs');const cors=require('cors');const {nanoid}=require('nanoid');
const app=express();const PORT=process.env.PORT||3000;const DATA_DIR=path.join(__dirname,'data');const MSG_FILE=path.join(DATA_DIR,'messages.json');
if(!fs.existsSync(DATA_DIR))fs.mkdirSync(DATA_DIR);if(!fs.existsSync(MSG_FILE))fs.writeFileSync(MSG_FILE,'[]','utf-8');
app.use(cors());app.use(express.json());app.use(express.urlencoded({extended:true}));app.use(express.static(__dirname));
const readMsgs=()=>{try{return JSON.parse(fs.readFileSync(MSG_FILE,'utf-8'));}catch{ return [] }};const writeMsgs=(m)=>fs.writeFileSync(MSG_FILE,JSON.stringify(m,null,2),'utf-8');
app.get('/api/health',(req,res)=>res.json({ok:true,time:new Date().toISOString()}));
app.post('/api/auth/login',(req,res)=>{const {username,password}=req.body||{};if(username==='admin'&&password==='123456')return res.json({ok:true,token:'demo-token'});return res.status(401).json({ok:false,error:'用户名或密码错误'});});
app.get('/api/messages',(req,res)=>res.json({ok:true,data:readMsgs()}));
app.post('/api/messages',(req,res)=>{const {name,email,message}=req.body||{};if(!name||!email||!message)return res.status(400).json({error:'缺少必要字段'});const list=readMsgs();const item={id:nanoid(),name,email,message,read:false,createdAt:new Date().toISOString()};list.unshift(item);writeMsgs(list);res.status(201).json({ok:true,data:item});});
app.put('/api/messages/:id/read',(req,res)=>{const {id}=req.params;const list=readMsgs();const idx=list.findIndex(m=>m.id===id);if(idx<0)return res.status(404).json({error:'未找到'});list[idx].read=true;writeMsgs(list);res.json({ok:true,data:list[idx]});});
app.delete('/api/messages/:id',(req,res)=>{const {id}=req.params;const list=readMsgs();const next=list.filter(m=>m.id!==id);if(next.length===list.length)return res.status(404).json({error:'未找到'});writeMsgs(next);res.json({ok:true});});
app.listen(PORT,()=>console.log(`Server running at http://localhost:${PORT}`));
